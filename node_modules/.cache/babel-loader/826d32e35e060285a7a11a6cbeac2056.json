{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Escritorio/table_manager/src/App.js\",\n    _s = $RefreshSig$();\n\n/*\n\tImports:\n\t1. data : the dataset inside the .json file.\n\t2. useRef : management of the references within both headers and table content.\n*/\nimport data from './data.json';\nimport React, { useRef } from \"react\";\n/*\n\tDescription : Provides the dataset imported from the data.json file. \n  Output : Array of objects containing the .json file information, each\n           register contains a row of the deployed table.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getData() {\n  return data;\n}\n/*\n\tDescription : Loads the element containing all the table module.\n*/\n\n\nfunction App() {\n  _s();\n\n  /*\n    Initializes the dataset references:\n    + headersRef : Table headers reference.\n    + rowsRef : Table content reference.\n  */\n  const headersRef = useRef([]);\n  headersRef.current = [];\n  const rowsRef = useRef([]);\n  rowsRef.current = [];\n  /*\n    Initialize the information regarding both\n    the dataset in the view and the logic\n  */\n\n  var dataSet = getData();\n  var informationTable = [];\n  var infoRow = [];\n  dataSet.map(data => {\n    infoRow.push(data.region_name);\n    infoRow.push(data.region_alpha_code);\n    infoRow.push(data.value);\n    infoRow.push(data.ref_date);\n    informationTable.push(infoRow);\n    infoRow = [];\n  });\n  /*\n    References regarding the column re-ordering interaction:\n    + isReorderActive : Sets the columns reorder lifecycle.\n    + infoOrigin : Captures the origin column information.\n    + posOrigin : Captures the origin column position.\n    + infoDestiny : Captures the destiny column information.\n    + posDestiny : Captures the destiny column position.\n  */\n\n  var isReorderActive = false;\n  var infoOrigin = [];\n  var posOrigin;\n  var infoDestiny = [];\n  var posDestiny;\n  const HEADERSTEXT = [\"Region name\", \"Region alpha code\", \"Value\", \"Reference date\"];\n  /*const headerStyle = {\n    \"borderColor\": \"#3c3f51\",\n    \"backgroundColor\": \"#353849\",\n    \"color\": \"#9398b6\"\n  };*/\n\n  /*\n    Captures the dataset references whenever\n    the events are called\n  */\n\n  const addHeaderToRefs = el => {\n    if (el != null) {\n      headersRef.current.push(el);\n    }\n  };\n\n  const addRowToRefs = el => {\n    if (el != null) {\n      rowsRef.current.push(el);\n    }\n  };\n  /*\n    Renders the headers for the view.\n  */\n\n\n  const renderHeaders = () => {\n    var headers = [];\n    HEADERSTEXT.map((header, i) => {\n      // Adds the current element to the headers reference\n      headers.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        ref: addHeaderToRefs,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" //Adds both key and click handler (explanation further in this document)\n          ,\n          onKeyPress: event => keypressHandler(event, i),\n          defaultValue: header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: event => handleReorderColumns(i),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa\",\n            children: \"\\uF021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this));\n      return headers;\n    });\n    return headers;\n  };\n\n  const keypressHandler = (event, currentPos) => {\n    if (event.key === \"Enter\") {\n      headersRef.current[currentPos].childNodes[0].blur();\n    }\n  };\n\n  const handleReorderColumns = currentPos => {\n    if (isReorderActive) {\n      posDestiny = currentPos;\n      reOrderColumns(posOrigin, posDestiny);\n      restoreSelectedStyle(posOrigin);\n      isReorderActive = false;\n    } else {\n      posOrigin = currentPos;\n      changeSelectedStyle(currentPos);\n      isReorderActive = true;\n    }\n  };\n\n  function reOrderColumns(posOrigin, posDestiny) {\n    infoOrigin = getInformationColumn(posOrigin);\n    infoDestiny = getInformationColumn(posDestiny);\n\n    for (var i = 0; i < informationTable.length; i++) {\n      rowsRef.current[i].cells[posOrigin].innerText = infoDestiny[i];\n      rowsRef.current[i].cells[posDestiny].innerText = infoOrigin[i];\n      informationTable[i][posOrigin] = infoDestiny[i];\n      informationTable[i][posDestiny] = infoOrigin[i];\n    }\n\n    const headerOrigin = headersRef.current[posOrigin].childNodes[0].value;\n    const headerDestiny = headersRef.current[posDestiny].childNodes[0].value;\n    headersRef.current[posOrigin].childNodes[0].value = headerDestiny;\n    headersRef.current[posDestiny].childNodes[0].value = headerOrigin;\n  }\n\n  ;\n\n  function changeSelectedStyle(currentPos) {\n    headersRef.current[currentPos].style.boxShadow = \"-2px -2px 7px -1px #888888\";\n    headersRef.current[currentPos].style.filter = \"brightness(190%)\";\n\n    for (var i = 0; i < headersRef.current.length; i++) {\n      if (i !== currentPos) {\n        headersRef.current[i].childNodes[1].style.filter = \"brightness(190%)\";\n        headersRef.current[i].childNodes[1].childNodes[0].style.fontSize = \"130%\";\n      }\n    }\n  }\n\n  function restoreSelectedStyle(currentPos) {\n    headersRef.current[currentPos].style.boxShadow = \"none\";\n    headersRef.current[currentPos].style.filter = \"brightness(100%)\";\n\n    for (var i = 0; i < headersRef.current.length; i++) {\n      if (i !== currentPos) {\n        headersRef.current[i].childNodes[1].style.filter = \"brightness(100%)\";\n        headersRef.current[i].childNodes[1].childNodes[0].style.fontSize = \"100%\";\n      }\n    }\n  }\n\n  function getInformationColumn(currentPos) {\n    var selectedInformation = [];\n\n    for (var i = 0; i < informationTable.length; i++) {\n      selectedInformation.push(informationTable[i][currentPos]);\n    }\n\n    return selectedInformation;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderHeaders()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataSet.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ref: addRowToRefs,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.region_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.region_alpha_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.ref_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MI0cH6AenWuNbMCNSkqY64t9Kr8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabriel/Escritorio/table_manager/src/App.js"],"names":["data","React","useRef","getData","App","headersRef","current","rowsRef","dataSet","informationTable","infoRow","map","push","region_name","region_alpha_code","value","ref_date","isReorderActive","infoOrigin","posOrigin","infoDestiny","posDestiny","HEADERSTEXT","addHeaderToRefs","el","addRowToRefs","renderHeaders","headers","header","i","event","keypressHandler","handleReorderColumns","currentPos","key","childNodes","blur","reOrderColumns","restoreSelectedStyle","changeSelectedStyle","getInformationColumn","length","cells","innerText","headerOrigin","headerDestiny","style","boxShadow","filter","fontSize","selectedInformation"],"mappings":"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","sourcesContent":["/*\n\tImports:\n\t1. data : the dataset inside the .json file.\n\t2. useRef : management of the references within both headers and table content.\n*/\nimport data from './data.json';\nimport React, {useRef} from \"react\";\n\n/*\n\tDescription : Provides the dataset imported from the data.json file. \n  Output : Array of objects containing the .json file information, each\n           register contains a row of the deployed table.\n*/\nfunction getData() {\n  return data;\n}\n\n/*\n\tDescription : Loads the element containing all the table module.\n*/\nfunction App() {\n  /*\n    Initializes the dataset references:\n    + headersRef : Table headers reference.\n    + rowsRef : Table content reference.\n  */ \n  const headersRef = useRef([]); \n  headersRef.current = []; \n  const rowsRef = useRef([]);\n  rowsRef.current = [];\n\n  /*\n    Initialize the information regarding both\n    the dataset in the view and the logic\n  */ \n  var dataSet = getData();\n  var informationTable = [];\n  var infoRow = []; \n\n  dataSet.map((data) => {\n    infoRow.push(data.region_name);\n    infoRow.push(data.region_alpha_code);\n    infoRow.push(data.value);\n    infoRow.push(data.ref_date);\n    informationTable.push(infoRow);\n    infoRow = []; \n  });\n \n  /*\n    References regarding the column re-ordering interaction:\n    + isReorderActive : Sets the columns reorder lifecycle.\n    + infoOrigin : Captures the origin column information.\n    + posOrigin : Captures the origin column position.\n    + infoDestiny : Captures the destiny column information.\n    + posDestiny : Captures the destiny column position.\n  */\n  var isReorderActive = false;\n  var infoOrigin = [];\n  var posOrigin; \n  var infoDestiny = [];\n  var posDestiny;\n\n\n  const HEADERSTEXT = [\"Region name\",\n                       \"Region alpha code\",\n                       \"Value\",\n                       \"Reference date\"];\n\n  /*const headerStyle = {\n    \"borderColor\": \"#3c3f51\",\n    \"backgroundColor\": \"#353849\",\n    \"color\": \"#9398b6\"\n  };*/\n\n  /*\n    Captures the dataset references whenever\n    the events are called\n  */\n  const addHeaderToRefs = (el) =>{\n    if(el!=null){\n      headersRef.current.push(el);\n    }\n  };\n  const addRowToRefs = (el) =>{\n    if(el!=null){\n      rowsRef.current.push(el);\n    }\n  };\n    \n  /*\n    Renders the headers for the view.\n  */\n  const renderHeaders = () => {\n    var headers = [];\n    HEADERSTEXT.map((header,i) => {\n                     // Adds the current element to the headers reference\n        headers.push(<th ref={addHeaderToRefs}>\n                     <input type=\"text\"  \n                        //Adds both key and click handler (explanation further in this document)\n                        onKeyPress={event => keypressHandler(event,i)} \n                        defaultValue={header}/>   \n                     <a href=\"#\" onClick={event => handleReorderColumns(i)}>\n                         <i className=\"fa\">&#xf021;</i></a> \n                     </th>);\n        return headers; \n    }); \n    return headers;\n  }\n\n  const keypressHandler = (event,currentPos) => {\n    if (event.key === \"Enter\") {\n        headersRef.current[currentPos].childNodes[0].blur();\n    }\n  };\n\n  const handleReorderColumns = (currentPos) => {\n    if(isReorderActive){\n      posDestiny = currentPos;\n      reOrderColumns(posOrigin,posDestiny);\n      restoreSelectedStyle(posOrigin);\n      isReorderActive = false; \n    }else{\n      posOrigin = currentPos;\n      changeSelectedStyle(currentPos);\n      isReorderActive = true; \n    }\n  }\n\n  function reOrderColumns(posOrigin,posDestiny){\n    infoOrigin = getInformationColumn(posOrigin);\n    infoDestiny = getInformationColumn(posDestiny);\n    for(var i = 0; i < informationTable.length; i++){\n      rowsRef.current[i].cells[posOrigin].innerText = infoDestiny[i];\n      rowsRef.current[i].cells[posDestiny].innerText = infoOrigin[i];\n      informationTable[i][posOrigin] = infoDestiny[i];\n      informationTable[i][posDestiny] = infoOrigin[i];\n    }\n    const headerOrigin = headersRef.current[posOrigin].childNodes[0].value;\n    const headerDestiny = headersRef.current[posDestiny].childNodes[0].value;\n    headersRef.current[posOrigin].childNodes[0].value = headerDestiny;\n    headersRef.current[posDestiny].childNodes[0].value = headerOrigin;\n  };\n\n  function changeSelectedStyle(currentPos){\n    headersRef.current[currentPos].style.boxShadow = \"-2px -2px 7px -1px #888888\";\n    headersRef.current[currentPos].style.filter = \"brightness(190%)\";\n\n    for(var i = 0; i < headersRef.current.length; i++){\n      if(i!==currentPos){\n        headersRef.current[i].childNodes[1].style.filter = \"brightness(190%)\";\n        headersRef.current[i].childNodes[1].childNodes[0].style.fontSize = \"130%\";\n      }\n    }\n  }\n\n  function restoreSelectedStyle(currentPos){\n    headersRef.current[currentPos].style.boxShadow = \"none\";\n    headersRef.current[currentPos].style.filter = \"brightness(100%)\";\n\n    for(var i = 0; i < headersRef.current.length; i++){\n      if(i!==currentPos){\n        headersRef.current[i].childNodes[1].style.filter = \"brightness(100%)\";\n        headersRef.current[i].childNodes[1].childNodes[0].style.fontSize = \"100%\";\n      }\n    }\n  }\n\n\n\n  function getInformationColumn(currentPos){\n    var selectedInformation = [];\n    for(var i = 0; i < informationTable.length; i++){\n      selectedInformation.push(informationTable[i][currentPos]);\n    }\n    return selectedInformation;\n  };\n\n  return (\n    <div className=\"App\">\n      <table>\n        <thead>\n          <tr>\n              {renderHeaders()}\n          </tr>\n        </thead>\n        <tbody>\n          { dataSet.map((data, i) => {\n            return (\n                <tr ref={addRowToRefs}>\n                <td>{data.region_name}</td>\n                <td>{data.region_alpha_code}</td>\n                <td>{data.value}</td>\n                <td>{data.ref_date}</td>\n                </tr>\n            )\n          })}\n        </tbody>\n      </table>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}