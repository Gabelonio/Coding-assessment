{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Escritorio/table_manager/src/main_table.js\";\nimport React from \"react\";\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainTable = () => {\n  function renderHeaders() {\n    let headers = [];\n    const dataImport = data[0];\n    Object.keys(dataImport).map((x, i) => {\n      headers.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: x\n      }, i.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this));\n    });\n    return headers;\n  }\n\n  function renderValues() {\n    let values = [];\n    let res = Object.values(data);\n    console.log(res[0][0]);\n    res.map((x, i) => {\n      Object.values(res[i]).map(x => {\n        values.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this));\n        console.log(x);\n        return values;\n      });\n      return values;\n    });\n    return values;\n  }\n  /*\n  const RenderRow = (props) =>{\n  return props.keys.map((key, index)=>{\n  return <td key={props.data[key]}>{props.data[key]}</td>\n  })\n  }\n         \n  getRowsData = function(){\n  var items = this.props.data;\n  var keys = this.getKeys();\n  return items.map((row, index)=>{\n  return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n  })\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderHeaders()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderValues()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MainTable;\nexport default MainTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTable\");","map":{"version":3,"sources":["/home/gabriel/Escritorio/table_manager/src/main_table.js"],"names":["React","data","MainTable","renderHeaders","headers","dataImport","Object","keys","map","x","i","push","name","renderValues","values","res","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;;AAGA,MAAMC,SAAS,GAAE,MAAI;AAIjB,WAASC,aAAT,GAAwB;AACpB,QAAIC,OAAO,GAAG,EAAd;AAEA,UAAMC,UAAU,GAAGJ,IAAI,CAAC,CAAD,CAAvB;AACAK,IAAAA,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAS;AACjCN,MAAAA,OAAO,CAACO,IAAR,eAAa;AAAA,kBAAkBF;AAAlB,SAASC,CAAC,CAACE,IAAX;AAAA;AAAA;AAAA;AAAA,cAAb;AACH,KAFD;AAIA,WAAOR,OAAP;AAEH;;AAED,WAASS,YAAT,GAAuB;AACnB,QAAIC,MAAM,GAAG,EAAb;AAEA,QAAIC,GAAG,GAAGT,MAAM,CAACQ,MAAP,CAAcb,IAAd,CAAV;AAEAe,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ;AACAA,IAAAA,GAAG,CAACP,GAAJ,CAAQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAEdJ,MAAAA,MAAM,CAACQ,MAAP,CAAcC,GAAG,CAACL,CAAD,CAAjB,EAAsBF,GAAtB,CAA0BC,CAAC,IAAI;AAC3BK,QAAAA,MAAM,CAACH,IAAP,eAAY;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AACA,eAAOK,MAAP;AACH,OAJD;AAKA,aAAOA,MAAP;AACH,KARD;AAUA,WAAOA,MAAP;AAEH;AAEG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGI,sBACA,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI;AAAA,+BACI;AAAA,oBAAKX,aAAa;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAA,oBAAKU,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CAlED;;KAAMX,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n\nimport data from './data.json';\n\n\nconst MainTable =()=>{\n\n\n\n    function renderHeaders(){\n        let headers = [];\n\n        const dataImport = data[0]; \n        Object.keys(dataImport).map((x,i) => {\n            headers.push(<td key={i.name}>{x}</td>); \n        });\n\n        return headers; \n\n    }\n\n    function renderValues(){\n        let values = [];\n\n        let res = Object.values(data);\n\n        console.log(res[0][0]);\n        res.map((x, i) => {\n\n            Object.values(res[i]).map(x => {\n                values.push(<td >{x}</td>);\n                console.log(x);\n                return values;\n            });\n            return values;\n        });\n\n        return values;\n\n    }\n\n        /*\n    const RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n       }\n       \n       \n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n    }*/\n\n    return(\n    <React.Fragment>\n\n        <p>Table</p>\n        <table>\n            <thead>\n                <tr>{renderHeaders()}</tr>\n            </thead>\n            <tbody>\n                <tr>{renderValues()}</tr>\n            </tbody>                  \n        </table>\n    </React.Fragment> \n    )\n}\n\nexport default MainTable;  \n"]},"metadata":{},"sourceType":"module"}