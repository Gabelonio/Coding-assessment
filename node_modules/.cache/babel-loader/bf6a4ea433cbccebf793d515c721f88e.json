{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Escritorio/table_manager/src/main_table.js\";\nimport React from \"react\";\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getData() {\n  return data;\n}\n\nclass MainTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState(prevState => {\n      return {\n        json: getData()\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region alpha code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reference date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.json.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.region_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.region_alpha_code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.ref_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MainTable;\n/*\nconst MainTable =()=>{\n\n    function renderHeaders(){\n        let headers = [];\n\n        const dataImport = data[0]; \n        Object.keys(dataImport).map((element,i) => {\n            headers.push(<td key={i.name}>{element}</td>); \n        });\n\n        return headers; \n\n    }\n\n    function renderValues(){\n        let values = [];\n\n        let res = Object.values(data);\n\n        res.map((x, i) => {\n            console.log(res[i]);\n            Object.values(res[i]).map(x => {\n                values.push(<td >{x}</td>);\n                return values;\n            });\n            return values;\n        });\n\n        return values;\n\n    }\n\n        /*\n    const RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n       }\n       \n       \n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n    }\n\n    return(\n    <React.Fragment>\n\n        <p>Table</p>\n        <table>\n            <thead>\n                <tr>{renderHeaders()}</tr>\n            </thead>\n            <tbody>\n                <tr>{renderValues()}</tr>\n            </tbody>                  \n        </table>\n    </React.Fragment> \n    )\n}\n\nexport default MainTable;  */","map":{"version":3,"sources":["/home/gabriel/Escritorio/table_manager/src/main_table.js"],"names":["React","data","getData","MainTable","Component","constructor","props","state","json","componentDidMount","setState","prevState","render","map","i","region_name","region_alpha_code","value","ref_date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,SAASC,OAAT,GAAmB;AACf,SAAOD,IAAP;AACH;;AAED,MAAME,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB,aAAO;AACHH,QAAAA,IAAI,EAAEN,OAAO;AADV,OAAP;AAGH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,oBACK,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACZ,IAAD,EAAOa,CAAP,KAAa;AAClC,gCACI;AAAA,sCACA;AAAA,0BAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFA,eAGA;AAAA,0BAAKf,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,sBAHA,eAIA;AAAA,0BAAKhB,IAAI,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,sBAJA;AAAA,eAASJ,CAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAQC,WATA;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AA3CmC;;AA8CtC,eAAeX,SAAf;AAwBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nimport data from './data.json';\n\nfunction getData() {\n    return data;\n}\n  \nclass MainTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            json: []\n        }\n    }\n\n    componentDidMount() {\n        this.setState((prevState) => {\n            return {\n                json: getData()\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Region name</th>\n                            <th>Region alpha code</th>\n                            <th>Value</th>\n                            <th>Reference date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.json.map((data, i) => {\n                        return (\n                            <tr key={i}>\n                            <td>{data.region_name}</td>\n                            <td>{data.region_alpha_code}</td>\n                            <td>{data.value}</td>\n                            <td>{data.ref_date}</td>\n                            </tr>\n                        )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n  export default MainTable;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nconst MainTable =()=>{\n\n    function renderHeaders(){\n        let headers = [];\n\n        const dataImport = data[0]; \n        Object.keys(dataImport).map((element,i) => {\n            headers.push(<td key={i.name}>{element}</td>); \n        });\n\n        return headers; \n\n    }\n\n    function renderValues(){\n        let values = [];\n\n        let res = Object.values(data);\n\n        res.map((x, i) => {\n            console.log(res[i]);\n            Object.values(res[i]).map(x => {\n                values.push(<td >{x}</td>);\n                return values;\n            });\n            return values;\n        });\n\n        return values;\n\n    }\n\n        /*\n    const RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n       }\n       \n       \n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n    }\n\n    return(\n    <React.Fragment>\n\n        <p>Table</p>\n        <table>\n            <thead>\n                <tr>{renderHeaders()}</tr>\n            </thead>\n            <tbody>\n                <tr>{renderValues()}</tr>\n            </tbody>                  \n        </table>\n    </React.Fragment> \n    )\n}\n\nexport default MainTable;  */\n"]},"metadata":{},"sourceType":"module"}